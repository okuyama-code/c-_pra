#include <iostream>    // 入出力ストリームのライブラリをインクルード
#include <vector>      // 可変長配列(vector)のライブラリをインクルード
#include <sstream>     // 文字列ストリーム処理のライブラリをインクルード
using namespace std;   // 標準名前空間を使用

int main() {
    // プログラムのメイン関数

    // 入力された配列のサイズ(n)を読み取る
    int n;
    cin >> n;          // ユーザーからn(配列のサイズ)を取得
    cin.ignore();      // 入力バッファにある残りの改行文字を無視
                        // これがないと、次のgetline()が正常に動作しない

    // n個の要素を格納するためのvector配列を初期化
    vector<int> arr(n);

    // ユーザーから一行で空白区切りの複数の数値を入力
    string line;       // 入力された一行を格納する変数
    getline(cin, line); // 一行を読み取る
    stringstream ss(line); // 文字列を解析するためのstringstream
                          // stringstream は文字列から様々な型への変換を容易にする

    // stringstream を使って空白区切りの数値を配列に格納
    for (int i = 0; i < n; i++) {
        ss >> arr[i];  // 空白で区切られた数値を順番に配列に格納
                        // 例: "1 3 5" という入力からarr[0]=1, arr[1]=3, arr[2]=5が設定される
    }

    // 配列が昇順かどうかをチェック
    // 昇順：各要素が前の要素よりも大きい状態 (例: 1,3,5,7,9)
    for (int i = 0; i < n - 1; i++) {  // n-1回ループ（最後の要素は次の要素と比較できないため）
        if (arr[i] >= arr[i + 1]) {     // 現在の要素が次の要素以上なら
                                        // (>=は「以上」を意味し、「より大きいか等しい」)
            // 昇順でない場合（前の要素が後ろの要素以上）
            cout << "No" << endl;        // 「No」を出力
            return 0;                    // プログラムを終了（0は正常終了を意味する）
        }
    }

    // ループを抜けた = すべての要素が昇順に並んでいる
    cout << "Yes" << endl;               // 「Yes」を出力

    return 0;                            // プログラムを正常終了
}